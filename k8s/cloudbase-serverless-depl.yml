apiVersion: v1
kind: Service
metadata:
    name: cloudbase-serverless-svc
    annotations:
        prometheus.io/scrape: 'true'
    labels:
        app: cloudbase-serverless-depl
        tier: application
spec:
    selector:
        app: cloudbase-serverless-depl
    type: ClusterIP
    ports:
        - port: 4000
          name: web
          targetPort: 4000

---
apiVersion: v1
kind: ServiceAccount
metadata:
    name: cloudbase-sa

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
    name: cloudbase-role
    # namespace: default
rules:
    - apiGroups:
          - ''
          - 'apps'
      resources:
          - '*'
      verbs:
          - '*'
    - apiGroups:
          - autoscaling
      resources:
          - horizontalpodautoscalers
      verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
    name: cloudbase-sa
    # namespace: foo
roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cloudbase-role
subjects:
    - kind: ServiceAccount
      name: cloudbase-sa
      namespace: default

---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: cloudbase-serverless-depl

spec:
    selector:
        matchLabels:
            app: cloudbase-serverless-depl
    template:
        metadata:
            annotations:
                prometheus.io/scrape: 'true'
                prometheus.io/port: '4000'
                prometheus.io/path: '/metrics'
            labels:
                app: cloudbase-serverless-depl
        spec:
            serviceAccountName: cloudbase-sa
            containers:
                - name: cloudbase-serverless-depl
                  image: vnavaneeth/cloudbase-serverless
                  imagePullPolicy: 'Never'
                  ports:
                      - name: web
                        containerPort: 4000
                        protocol: TCP
                  # resources:
                  # limits:
                  #   memory: "128Mi"
                  #   cpu: "500m"
                  # ports:
                  # - containerPort: <Port>
